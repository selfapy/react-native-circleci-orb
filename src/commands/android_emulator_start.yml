description: Installs and starts an Android emulator with the given version and name.

parameters:
  device_name:
    description: The name of the AVD. You use this name to tell which device to run tests on.
    type: string
    default: "TestingAVD"
  platform_version:
    description: The version of android to run on the emulator. Usually in the form of "android-28".
    type: string
    default: "android-28"
  build_tools_version:
    description: The version of the Android build tools to install.
    type: string
    default: "28.0.3"
  logcat_grep:
    description: ADB logs will be shown in the "Start Android Emulator" commands, but we filter it using grep to avoid noise. You can specify additional strings to grep for. Make sure you escape special characters.
    type: string
    default: "com.reactnativecommunity"

steps:
  - run:
      name: Install Android Emulator
      shell: /bin/bash -e
      command: |
        yes | sdkmanager "platform-tools" "tools" >/dev/null
        yes | sdkmanager "platforms;<<parameters.platform_version>>" "system-images;<<parameters.platform_version>>;default;x86_64" >/dev/null
        yes | sdkmanager "emulator" --channel=3 >/dev/null
        yes | sdkmanager "build-tools;<<parameters.build_tools_version>>" >/dev/null
        yes | sdkmanager --licenses >/dev/null
        yes | sdkmanager --list

  - restore_cache:
      key: |
        brew-cache-{{ arch }}-{{ .Environment.CACHE_VERSION }}

  - run:
      name: Install node@<<parameters.node_version>>
      # after `curl`, bashrc contains the script to load nvm, we need to source it to use it
      command: |
        set +e
        curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.35.3/install.sh | bash
        echo 'export NVM_DIR=$HOME/.nvm' >> $BASH_ENV
        echo 'source $NVM_DIR/nvm.sh' >> $BASH_ENV
        source ~/.bashrc
        command -v nvm
        nvm install <<parameters.node_version>>
        nvm alias default <<parameters.node_version>>
  - run:
      name: Verify node version
      command: node --version

  - run:
      name: Configure Detox Environment
      command: |
        HOMEBREW_NO_AUTO_UPDATE=1 brew tap wix/brew >/dev/null
        HOMEBREW_NO_AUTO_UPDATE=1 brew tap homebrew/cask >/dev/null
        HOMEBREW_NO_AUTO_UPDATE=1 brew install applesimutils >/dev/null
        HOMEBREW_NO_AUTO_UPDATE=1 brew cask install android-sdk >/dev/null
        touch .watchmanconfig
        node -v

  - save_cache:
      paths:
        - /usr/local/Homebrew
        - ~/Library/Caches/Homebrew
      key: |
        brew-cache-{{ arch }}-{{ .Environment.CACHE_VERSION }}

  # to force ssh key generation for emulators
  - run:
      name: ADB Start Stop
      command: |
        adb start-server
        adb devices
        adb kill-server
        ls -la ~/.android

  - run:
      name: Create Android Emulator
      command:
        avdmanager create avd --force --name <<parameters.device_name>> --package
        "system-images;<<parameters.platform_version>>;default;x86_64" --tag
        default --device pixel

  - run:
      name: Start Android Emulator (background)
      command: |
        $ANDROID_HOME/emulator/emulator @<<parameters.device_name>> -version
        $ANDROID_HOME/emulator/emulator @<<parameters.device_name>> -cores 1 -gpu auto -accel on -memory 1024 -no-audio -no-snapshot -no-boot-anim -no-window -logcat *:W | grep -i 'ReactNative\|<<parameters.logcat_grep>>'
      background: true

  - run:
      name: Wait for AVD to be ready
      no_output_timeout: "5m"
      command: |
        export BOOT=""
        echo "Waiting for AVD to finish booting"
        export PATH=$(dirname $(dirname $(command -v android)))/platform-tools:$PATH
        until [[ "$BOOT" =~ "1" ]]; do
          sleep 5
          export BOOT=$(adb -e shell getprop sys.boot_completed 2>&1)
        done
        sleep 15
        adb shell settings put global window_animation_scale 0
        adb shell settings put global transition_animation_scale 0
        adb shell settings put global animator_duration_scale 0
        echo "Android Virtual Device is now ready."
